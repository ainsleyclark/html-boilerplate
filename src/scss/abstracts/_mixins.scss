// -----------------------------------------------------------------------------
// _mixins.scss
// This file contains all mixin's for use with scss files.
// -----------------------------------------------------------------------------

// sass-lint:disable no-duplicate-properties
// sass-lint:disable no-vendor-prefixes

// Pixel to REM Converter
// ==========================================================================

/// @author Ainsley Clark
/// @param {Number} $pxValue - Pixel amount to convert
/// @param {String} $property [font-size] - Property to convert
/// @param {Number} $standard-size - Initial base rem size
@mixin px-to-rem($pxValue, $property: "font-size", $standard-size: 16) {
	#{$property}: $pxValue + px;
	#{$property}: $pxValue / Ã¥$standard-size + rem;
}

// Event Wrapper
// ==========================================================================

/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
	@if $self {
		&,
		&:hover,
		&:active,
		&:focus {
			@content;
		}
	} @else {
		&:hover,
		&:active,
		&:focus {
			@content;
		}
	}
}

// Background Opacity
// ==========================================================================

/// @author Ainsley Clark
/// @param {Color} $color - Hex code for opacity
/// @param {Opacity} $opacity [0.3] - Opaque amount
@mixin background-opacity($color, $opacity: 0.3) {
	background: $color; /* The Fallback */
	background: rgba($color, $opacity);
}

// Background Gradient
// ==========================================================================

/// @author Ainsley Clark
/// @param {String} $start-color - Color to Start
/// @param {String} $start-color - Color to End
/// @param {String} $oreintation - 'vertical' or 'horizontal' (up or down)
@mixin background-gradient($start-color, $end-color, $orientation) {
	background: $start-color;

	@if $orientation == "vertical" {
		background: -webkit-linear-gradient(top, $start-color, $end-color);
		background: linear-gradient(to bottom, $start-color, $end-color);
	} @else if $orientation == "horizontal" {
		background: -webkit-linear-gradient(left, $start-color, $end-color);
		background: linear-gradient(to right, $start-color, $end-color);
	} @else {
		background: -webkit-radial-gradient(center, ellipse cover, $start-color, $end-color);
		background: radial-gradient(ellipse at center, $start-color, $end-color);
	}
}
//Usage:
//$start-color, $end-color, $orientation - vertical/horizontal/radial
//  .foo {
//     @include background-gradient(red, black, 'vertical');
//   }

// Fluid Type
// ==========================================================================

@function strip-unit($value) {
	@return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
	$u1: unit($min-vw);
	$u2: unit($max-vw);
	$u3: unit($min-font-size);
	$u4: unit($max-font-size);

	@if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
		& {
			font-size: $min-font-size;
			@media screen and (min-width: $min-vw) {
				font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
			}
			@media screen and (min-width: $max-vw) {
				font-size: $max-font-size;
			}
		}
	}
}
//Usage:
//@include fluid-type(320px, 1408px, 34px, 98px);

// Landscape Mixin
// ==========================================================================

@mixin landscape {
	@media screen and (orientation:landscape) {
		@content;
	}
}

// IE11 & Edge Mixins
// ==========================================================================

// IE11
@mixin ie11 {
	@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
		@content;
	}
}

// IE11 and Edge
@mixin ie11andedge {
	@media screen and (-webkit-min-device-pixel-ratio: 0) and (-ms-high-contrast: none), (-ms-high-contrast: active) {
		@content;
	}
}

// Firefox
@mixin firefox {
	@-moz-document url-prefix() {
		@content;
	}
}

//! UNTESTED 

// Firefox
@mixin firefox {
	@-moz-document url-prefix() {
		@content;
	}
}

// Chrome
@mixin firefox {
	@media screen and (-webkit-min-device-pixel-ratio:0) and (min-resolution:.001dpcm) {
		@content;
	}
}

// Safari
@mixin safari {
	@media not all and (min-resolution:.001dpcm){ 
		@supports (-webkit-appearance:none) {
			@content;
		}
	}
}